const fs = require('fs')
const write = require('write')
const path = require('path')
const chalk = require('chalk')
const config = require('../config')
let tool = require('../src/modules/Utils/tool')
let encryptionKeys = require('../src/hashes/encryptionKeys')
let aes256 = require('aes256')

const saveFile = function (contentStr, filePath) {
  filePath = path.join(config.build.encrypteesRoot, filePath)
  write.sync(filePath, contentStr)
  return filePath
}

// Default encrypt key to use, can change with each build
const eKeyIndex =  tool.rand(0, encryptionKeys.length-1)

const toString = function (arrayOfPlainValues) {
  // Prepare content string...
  let contentArr = []
  let iLenCount = 0
  let lenCount = arrayOfPlainValues.length
  arrayOfPlainValues.forEach((v, i) => {
    iLenCount++
    let comma = ' '
    if (lenCount !== iLenCount) {
      comma = ','
    }
    const item = `  '${aes256.encrypt(encryptionKeys[eKeyIndex], v)}'${comma} // ${i}: ${v}`
    contentArr.push(item)
  })
  // Generate result string...
  let str = '// File auto-generated by build_encryptees.js\n'
  // str += '/* eslint-disable eol-last */\n'
  str += `// used eKeyIndex: ${eKeyIndex}\n`
  str += `module.exports = [\n${contentArr.join('\n')}\n]\n`

  return str
}

const createEkFile = function () {
  // Generate result string...
  let str = '// File auto-generated by build_encryptees.js\n'
  // str += '/* eslint-disable eol-last */\n'
  str += `module.exports = ${eKeyIndex}\n`
  return [saveFile(str, './_ek.js')]
}

const createEncryptees = function (sourceFile) {
  let createdFiles = []
  let plainSourceFilePath = path.join(config.build.encrypteesRoot, sourceFile)
  let plainValues = []
  if (fs.existsSync(plainSourceFilePath)) {
    plainValues = require(plainSourceFilePath)
  }

  let listOfDestFile = Object.keys(plainValues)
  listOfDestFile.forEach((destFileName, i) => {
    let str = toString(plainValues[destFileName])
    let createdFilePath = saveFile(str, './' + destFileName + '.js')
    createdFiles.push(createdFilePath)
  })
  return createdFiles
}


// Execute
const Run = class Run {
  constructor () {
    let results = [
      ...createEkFile(),
      ...createEncryptees('./_encryptees.plain.js')
    ]
    console.log(chalk.cyan('  Build (encryptees) complete.\n'))
    results.forEach((v, i) => {
      console.log('    ' + chalk.green(v))
    })
  }
}

new Run()
