/**
 * ********** DEPRECATED **********
 * @deprecated use 'npm run build_encryptees' instead
 */
let aes256 = require('aes256')
let encryptionKeys = require('../../src/hashes/encryptionKeys')

let CreateAesArrayPlugin = (function () {
  const write = require('write')
  const path = require('path')

  function CreateAesArrayPlugin (options) {
    if (options === void 0) {
      options = {}
    }
    this.options = options
  }

  CreateAesArrayPlugin.prototype.apply = function (compiler) {
    const _this = this

    compiler.plugin('done', function () {
      const fullPath = path.join(_this.options.path, _this.options.fileName)
      let str = `// File auto-generated by webpack's CreateAesArrayPlugin\n`
      str += '/* eslint-disable eol-last */\n'
      // str += '/* eslint-disable comma-dangle */\n'
      str += 'module.exports = [\n'
      let iLenCount = 0
      let lenCount = _this.options.content.length
      let keyCount = encryptionKeys.length
      _this.options.content.forEach((v, i) => {
        iLenCount++
        let comma = ' '
        if (lenCount !== iLenCount) {
          comma = ','
        }
        // let eKeyIndex = i % keyCount
        let eKeyIndex = 1
        str += `  '${aes256.encrypt(encryptionKeys[eKeyIndex], v)}'${comma} // ${i}: ${v}\n`
      })
      str += ']\n'
      str = str.trim()
      write.sync(fullPath, str)
    })
  }

  return CreateAesArrayPlugin
})()

module.exports = CreateAesArrayPlugin
